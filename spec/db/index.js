// This file is autogenerated by the hyperdb compiler
/* eslint-disable camelcase */

const { IndexEncoder, c } = require('hyperdb/runtime')

const { version, resolveStruct } = require('./messages.js')

// '@pear/bundle' collection key
const collection16_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 16 })

function collection16_indexify (record) {
  const a = record.link
  return a === undefined ? [] : [a]
}

// '@pear/bundle' reconstruction function
function collection16_reconstruct (version, keyBuf, valueBuf) {
  const key = collection16_key.decode(keyBuf)
  const value = c.decode(resolveStruct('@pear/bundle/value', version), valueBuf)
  // TODO: This should be fully code generated
  return {
    link: key[0],
    ...value
  }
}
// '@pear/bundle' key reconstruction function
function collection16_reconstruct_key (keyBuf) {
  const key = collection16_key.decode(keyBuf)
  return {
    link: key[0]
  }
}

// '@pear/bundle'
const collection16 = {
  name: '@pear/bundle',
  id: 16,
  encodeKey (record) {
    const key = [record.link]
    return collection16_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection16_key.encodeRange({
      gt: gt ? collection16_indexify(gt) : null,
      lt: lt ? collection16_indexify(lt) : null,
      gte: gte ? collection16_indexify(gte) : null,
      lte: lte ? collection16_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    return c.encode(resolveStruct('@pear/bundle/value', version), record)
  },
  trigger: null,
  reconstruct: collection16_reconstruct,
  reconstructKey: collection16_reconstruct_key,
  indexes: []
}

// '@pear/dht' collection key
const collection17_key = new IndexEncoder([
], { prefix: 17 })

function collection17_indexify (record) {
  return []
}

// '@pear/dht' reconstruction function
function collection17_reconstruct (version, keyBuf, valueBuf) {
  const value = c.decode(resolveStruct('@pear/dht/value', version), valueBuf)
  return value
}
// '@pear/dht' key reconstruction function
function collection17_reconstruct_key (keyBuf) {
  return {}
}

// '@pear/dht'
const collection17 = {
  name: '@pear/dht',
  id: 17,
  encodeKey (record) {
    const key = []
    return collection17_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection17_key.encodeRange({
      gt: gt ? collection17_indexify(gt) : null,
      lt: lt ? collection17_indexify(lt) : null,
      gte: gte ? collection17_indexify(gte) : null,
      lte: lte ? collection17_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    return c.encode(resolveStruct('@pear/dht/value', version), record)
  },
  trigger: null,
  reconstruct: collection17_reconstruct,
  reconstructKey: collection17_reconstruct_key,
  indexes: []
}

module.exports = {
  version,
  collections: [
    collection16,
    collection17
  ],
  indexes: [
  ],
  resolveCollection,
  resolveIndex
}

function resolveCollection (name) {
  switch (name) {
    case '@pear/bundle': return collection16
    case '@pear/dht': return collection17
    default: return null
  }
}

function resolveIndex (name) {
  switch (name) {
    default: return null
  }
}
